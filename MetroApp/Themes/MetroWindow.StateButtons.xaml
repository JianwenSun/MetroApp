<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:MetroApp.Controls"
    xmlns:Themes="clr-namespace:MetroApp.Themes">

    <Style x:Key="BaseMetroWindowStateButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static Themes:BrushKeys.WindowForegroundBrushKey}}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"
                                          Opacity="0.75" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource {x:Static Themes:BrushKeys.WindowStateButtonMouseOverBrushKey}}" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource {x:Static Themes:BrushKeys.WindowStateButtonPressedBrushKey}}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static Themes:BrushKeys.WindowStateButtonDisabledBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BaseMetroWindowStateButtonCloseStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static Themes:BrushKeys.WindowForegroundBrushKey}}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"
                                          Opacity="0.75" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource {x:Static Themes:BrushKeys.WindowStateButtonCloseMouseOverBrushKey}}" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource {x:Static Themes:BrushKeys.WindowStateButtonClosePressedBrushKey}}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static Themes:BrushKeys.WindowStateButtonDisabledBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MetroWindowStateButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource BaseMetroWindowStateButtonStyle}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Width"
                Value="26" />
        <Setter Property="MaxHeight"
                Value="26" />
        <Setter Property="Padding"
                Value="0" />
    </Style>

    <Style x:Key="MetroWindowStateButtonCloseStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource BaseMetroWindowStateButtonCloseStyle}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Width"
                Value="26" />
        <Setter Property="MaxHeight"
                Value="26" />
        <Setter Property="Padding"
                Value="0" />
    </Style>

    <Style TargetType="{x:Type Controls:MetroWindowStateButtons}" x:Key="MetroWindowStateButtonsStyle">
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Controls:MetroWindowStateButtons">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Button x:Name="PART_Min"
                                Grid.Column="0"
                                Focusable="False"
                                Style="{StaticResource MetroWindowStateButtonStyle}"
                                Foreground="{TemplateBinding Foreground}"
                                ToolTip="MiniButton">
                            <Path Data="F1M0,6L0,9 9,9 9,6 0,6z"
                                  SnapsToDevicePixels="True"
                                  Fill="{TemplateBinding Foreground}" />
                        </Button>

                        <Button x:Name="PART_Max"
                                Grid.Column="1"
                                Focusable="False"
                                Style="{StaticResource MetroWindowStateButtonStyle}"
                                Foreground="{TemplateBinding Foreground}"
                                ToolTip="MaxButton">
                            <Path x:Name="MaxPath" SnapsToDevicePixels="True"
                                  Fill="{TemplateBinding Foreground}" >
                            </Path>
                        </Button>

                        <Button x:Name="PART_Close"
                                Grid.Column="2"
                                Focusable="False"
                                Style="{StaticResource MetroWindowStateButtonCloseStyle}"
                                Foreground="{TemplateBinding Foreground}"
                                ToolTip="CloseButton">
                            <Path Data="F1M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z"
                                  SnapsToDevicePixels="True"
                                  Fill="{TemplateBinding Foreground}"/>
                        </Button>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=WindowState}" Value="Normal">
                            <Setter TargetName="MaxPath" Property="Data" Value="F1M0,0L0,9 9,9 9,0 0,0 0,3 8,3 8,8 1,8 1,3z" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=WindowState}" Value="Maximized">
                            <Setter TargetName="MaxPath" Property="Data" Value="F1M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:MetroWindowStateButtons}" 
           BasedOn="{StaticResource MetroWindowStateButtonsStyle}" />

</ResourceDictionary>
