<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Converters="clr-namespace:MetroApp.Converters"
                    xmlns:Themes="clr-namespace:MetroApp.Themes"
                    xmlns:Helpers="clr-namespace:MetroApp.Helpers">


    <!-- ********************************** RadioButton Style **********************************-->
    <!-- adapted from http://brianlagunas.com/free-metro-light-and-dark-themes-for-wpf-and-silverlight-microsoft-controls/ -->
    <Style x:Key="MetroRadioButton"
           TargetType="RadioButton">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static Themes:BrushKeys.RadioButtonForegroundBrushKey}}" />
        <Setter Property="Height" Value="16"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="hover" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="pressed" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To=".7"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="contentPresenter" />
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="disabled" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="Checked1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="focused" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        
                        <Grid x:Name="PART_CHECKBOX" Grid.Column="0">
                            <Ellipse x:Name="normal"
                                     Opacity="1"
                                     Stroke="{DynamicResource {x:Static Themes:BrushKeys.RadioButtonBorderBrushKey}}"
                                     StrokeThickness="1"
                                     Fill="{DynamicResource {x:Static Themes:BrushKeys.RadioButtonBackgroundBrushKey}}"
                                     Width="{TemplateBinding Height}"
                                     Height="{TemplateBinding Height}" />
                            <Ellipse x:Name="hover"
                                     Stroke="{DynamicResource {x:Static Themes:BrushKeys.RadioButtonMouseOverBorderBrushKey}}"
                                     StrokeThickness="1"
                                     Fill="{DynamicResource {x:Static Themes:BrushKeys.RadioButtonMouseOverBackgroundBrushKey}}"
                                     Opacity="0"
                                     Width="{TemplateBinding Height}"
                                     Height="{TemplateBinding Height}" />
                            <Ellipse x:Name="pressed"
                                     Opacity="0"
                                     Stroke="{DynamicResource {x:Static Themes:BrushKeys.RadioButtonPressedBorderBrushKey}}"
                                     StrokeThickness="1"
                                     Fill="{DynamicResource {x:Static Themes:BrushKeys.RadioButtonPressedBackgroundBrushKey}}"
                                     Width="{TemplateBinding Height}"
                                     Height="{TemplateBinding Height}" />
                            <Ellipse x:Name="focused"
                                     Opacity="0"
                                     Stroke="{DynamicResource {x:Static Themes:BrushKeys.RadioButtonFocusedBorderBrushKey}}"
                                     StrokeThickness="1"
                                     Fill="{DynamicResource {x:Static Themes:BrushKeys.RadioButtonFocusedBackgroundBrushKey}}"
                                     Width="{TemplateBinding Height}"
                                     Height="{TemplateBinding Height}" />
                            <Ellipse x:Name="Checked1"
                                     Fill="{DynamicResource {x:Static Themes:BrushKeys.RadioButtonCheckedBackgroundBrushKey}}"
                                     Opacity="0"
                                     Width="{TemplateBinding Height, Converter={x:Static Converters:StrokeMaginConverter.Instance}}"
                                     Height="{TemplateBinding Height, Converter={x:Static Converters:StrokeMaginConverter.Instance}}" />
                            <Ellipse x:Name="disabled"
                                     Opacity="0"
                                     Stroke="{DynamicResource {x:Static Themes:BrushKeys.RadioButtonDisabledBorderBrushKey}}"
                                     StrokeThickness="1"
                                     Fill="{DynamicResource {x:Static Themes:BrushKeys.RadioButtonDisabledBackgroundBrushKey}}"
                                     Width="{TemplateBinding Height}"
                                     Height="{TemplateBinding Height}" />
                        </Grid>

                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="3,0,0,0"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
